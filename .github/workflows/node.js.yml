# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ prod ]
  pull_request:
    branches: [ prod ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        cache-dependency-path: frontend/package-lock.json
    - name: Run install
      run: cd frontend && rm -rf node_modules && yarn install --frozen-lockfile
    - name: Run build
      run: cd frontend && yarn build
#    - name: Run tests
#      run: cd frontend && yarn test
    - name: set global env
      id: global_env
      run: |
        echo "::set-output name=DOCKERHUB_IMAGE_NAME::ghcr.io/dssorkin/findband/findband_frontend"
    - name: Build docker image Backend
      run: cd frontend && docker build . -t "${{ steps.global_env.outputs.DOCKERHUB_IMAGE_NAME }}:latest"
    - name: Docker login
      run: docker login ghcr.io -u $GITHUB_ACTOR -p ${{secrets.GITHUB_TOKEN}}
    - name: Publish frontend
      run: cd frontend && docker push ${{ steps.global_env.outputs.DOCKERHUB_IMAGE_NAME }}
    - name: Deploy frontend
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.FRONTEND_HOST }}
        username: ${{ secrets.FRONTEND_USERNAME }}
        key: ${{ secrets.FRONTEND_SSH_KEY }}
        script: |
          cd findband/frontend
          git pull origin prod
          echo $CR_PAT | sudo docker login ghcr.io -u dssorokin --password-stdin
          sudo docker pull ${{ steps.global_env.outputs.DOCKERHUB_IMAGE_NAME }}
          sudo docker run ${{ steps.global_env.outputs.DOCKERHUB_IMAGE_NAME }}:latest -d -p 80:8080

